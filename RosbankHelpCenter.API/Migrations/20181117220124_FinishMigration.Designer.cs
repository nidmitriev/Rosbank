// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RosbankHelpCenter.API.Data;

namespace RosbankHelpCenter.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20181117220124_FinishMigration")]
    partial class FinishMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065");

            modelBuilder.Entity("RosbankHelpCenter.API.Models.Photo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<bool>("IsMain");

                    b.Property<DateTime>("TimeAdded");

                    b.Property<string>("Url");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Photos");
                });

            modelBuilder.Entity("RosbankHelpCenter.API.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Answer");

                    b.Property<int>("IndexOfPop");

                    b.Property<string>("Quest");

                    b.Property<int?>("StaffMailId");

                    b.Property<string>("SubTheme");

                    b.Property<string>("Theme");

                    b.Property<bool>("Type");

                    b.HasKey("Id");

                    b.HasIndex("StaffMailId");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("RosbankHelpCenter.API.Models.Staff", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("MailForNotVip");

                    b.Property<string>("MailForVip");

                    b.HasKey("Id");

                    b.ToTable("Staffs");
                });

            modelBuilder.Entity("RosbankHelpCenter.API.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BusinessType");

                    b.Property<string>("City");

                    b.Property<string>("Country");

                    b.Property<DateTime>("Created");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("Gender");

                    b.Property<bool>("IsVIP");

                    b.Property<string>("KnownAs");

                    b.Property<DateTime>("LastActive");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RosbankHelpCenter.API.Models.Value", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Values");
                });

            modelBuilder.Entity("RosbankHelpCenter.API.Models.Photo", b =>
                {
                    b.HasOne("RosbankHelpCenter.API.Models.User", "User")
                        .WithMany("Photos")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("RosbankHelpCenter.API.Models.Question", b =>
                {
                    b.HasOne("RosbankHelpCenter.API.Models.Staff", "StaffMail")
                        .WithMany()
                        .HasForeignKey("StaffMailId");
                });
#pragma warning restore 612, 618
        }
    }
}
